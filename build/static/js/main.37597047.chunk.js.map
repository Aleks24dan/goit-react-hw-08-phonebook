{"version":3,"sources":["services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducers.js","redux/store.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsApi","contacts","message","createAction","changeFilter","getContacts","state","items","getFilter","filter","getLoading","isLoading","getError","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","createReducer","fulfilled","_state","payload","pending","rejected","contactsActions","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","LabelInput","styled","form","label","Input","input","Button","button","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","contactsOperations","type","onChange","pattern","title","required","Span","span","ContainerItems","ul","ContactItems","li","ContactList","useSelector","contactsSelectors","useEffect","map","onClick","Filter","onBlur","Container","div","TitleH1","h1","TitleH2","h2","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37597047.chunk.js","sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get('/contacts');\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post('/contacts', contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  await axios.delete(`/contacts/${id}`);\n  return id;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactsApi from 'services/contacts-api';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsApi.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n          return await contactsApi.addContact(contact);\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await contactsApi.deleteContact(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const deleteContact = createAction('contacts/deleteContact');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n\n","import { createSelector } from 'reselect';\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\nimport { contactsActions } from '.';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_state, {payload}) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_state, {payload}) => payload,\n  [fetchContacts.pending]: null,\n  [addContact.rejected]: (_state, {payload}) => payload,\n  [addContact.pending]: null,\n  [deleteContact.rejected]: (_state, {payload}) => payload,\n  [deleteContact.pending]: null,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  isLoading,\n  filter,\n  error,\n});\n","/* eslint-disable import/no-anonymous-default-export */\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport contactReducer from '../redux/contacts/contacts-reducers';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n","import styled from \"@emotion/styled\";\n\nexport const form = styled.form`\nflex-direction: column;\ndisplay: flex;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const LabelInput = styled.label`\ndisplay: flex;\nfont-weight: 700;\nfont-size: 17px;\nmargin:0 auto;\nflex-direction: column;\nwidth: 300px;\njustify-content: center;\ntext-align:centr;\n`\n\nexport const Input = styled.input`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 1px 2px 3px rgb(85 42 85);\ndisplay: block;\nmargin: 0 auto;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\nmargin-top: 10px;\n  \n`\nexport const Label = styled.label`\ndisplay:flex;\nflexdiraction:column;\njustify-content: center;\ntext-align:centr;\n`","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { LabelInput, Input, Button } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(contactsOperations.addContact({ name, number }));\n    resetState();\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <LabelInput>Name</LabelInput>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <LabelInput>Number</LabelInput>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\nexport const Span = styled.span`\nfont-weight: 500;\nfont-size: 17px;\n`\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 5px;\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\nfont-size: 14px;\nfont-weight:700;\n  \n`\n\nexport const ContainerItems = styled.ul`\nmargin-top: 40px;\npadding-right:40px;\n`\n\nexport const ContactItems = styled.li`\nlist-style:none;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\nalign-items: center;\nmargin-bottom:5px;\n`\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\n\nimport {\n  Span,\n  Button,\n  ContactItems,\n  ContainerItems,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <ContainerItems>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItems key={id}>\n          <Span>{name}: </Span>\n          <Span>{number} </Span>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.deleteContact(id))}\n          >\n            Delete contact\n          </Button>\n        </ContactItems>\n      ))}\n    </ContainerItems>\n  );\n}\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { Input, LabelInput } from '../ContactForm/ContactForm.styled';\nimport { contactsSelectors, contactsActions } from 'redux/contacts';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const onChangeHandler = e => dispatch(contactsActions.changeFilter(e.target.value));\n  const onBlurHandler = () =>\n    dispatch(contactsActions.changeFilter(''));\n\n  return (\n    <label>\n      <LabelInput>Find contact by name</LabelInput>\n      <Input type=\"text\" value={value} onChange={onChangeHandler} onBlur={onBlurHandler} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\nmargin: 20px;\n    margin: 20px;\n    background: linear-gradient(\n176deg\n, rgb(57 51 175), rgb(87, 66, 100));\n    padding: 10px;\n    width: 577px;\n    box-shadow: 3px 1px 10px rgb(24 24 24);\n    border-radius: 5px;\n    text-align: center;\n`\nexport const TitleH1 = styled.h1`\ncolor:#d0cfc5;\n`\n\nexport const TitleH2 = styled.h2`\nmargin-top:45px;`","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\n\nexport default function App() {\n  return (\n    <Container>\n      <TitleH1>Phonebook</TitleH1>\n      <ContactForm />\n      <TitleH2>Contacts</TitleH2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from '../src/components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}